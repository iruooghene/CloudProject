name: Deploy Dockerhub

on:
  push:
    branches:
      - in-dev

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/checkout@v2
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Restore Maven Package
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('/*.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-


      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t vi108/cloudproject:latest .

      - name: Push Docker image to Docker Hub
        run: docker push vi108/cloudproject:latest

      - name: Connect to EC2 and Deploy
        env:
            EC2_PUBLIC_IP: ${{ secrets.EC2_PUBLIC_IP }}
            PEM_KEY: ${{ secrets.PEM_KEY }}
        run: |
            echo "${{ secrets.PEM_KEY }}" > cloudkeypair.pem
            chmod 400  cloudkeypair.pem
          
           if ! command -v docker &> /dev/null; then
              echo "Docker not found, installing..."
              sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
              curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
              echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
              sudo apt-get update
              sudo apt-get install -y docker-ce
              sudo systemctl start docker
              sudo systemctl enable docker
          else
              echo "Docker is already installed."
          fi
              
            # Run MySQL container
            sudo docker run -d --name mysql-db -e MYSQL_ROOT_PASSWORD=YourNewPassword -e MYSQL_DATABASE=cloud_db -p 3307:3306 mysql:latest
              
            # Pull and run your application container
            sudo docker pull vi108/cloudproject:latest
            sudo docker stop cloudproject || true
            sudo docker rm cloudproject || true
            sudo docker run -d --name cloudproject -p 8088:8088 --link mysql-db:mysql vi108/cloudproject:latest
            EOF
