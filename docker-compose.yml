version: '3.8'

services:
  app:
    build: .
    container_name: cloud_project
    environment:
      SPRING.DATASOURCE.URL: jdbc:mysql://cloudproject-mysql:3306/cloud_db?connectTimeout=30000
      SPRING.DATASOURCE.USERNAME: root
      SPRING.DATASOURCE.PASSWORD: YourNewPassword
    depends_on:
      mysql:
        condition: service_healthy

    ports:
      - "8088:8080"
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 128M
      restart_policy:
        condition: on-failure
    healthcheck:
     test: [ "CMD", "curl", "-f", "http://localhost:8088/health" ]
     interval: 30s
     timeout: 10s
     retries: 3




  mysql:
    image: mysql:8.0
    container_name: cloudproject-mysql
    environment:
      MYSQL_ROOT_PASSWORD: YourNewPassword
      MYSQL_DATABASE: cloud_db
      MYSQL_USER: viccyn
      MYSQL_PASSWORD: YourNewPassword
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml  # Mount the configuration file
    ports:
      - "9090:9090"  # Expose Prometheus UI
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'  # Point to the config file
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/-/ready"]
      interval: 30s
      timeout: 10s
      retries: 3
  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3000/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
  elasticsearch:
    image: elasticsearch:8.0.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true:true
      - xpack.security.http.ssl.enabled:true
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data

  logstash:
    image: docker.elastic.co/logstash/logstash:8.0.0
    container_name: logstash
    ports:
      - "5044:5044"  # Logstash default port
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf  # Mount your Logstash config

  kibana:
    image: kibana:8.0.0
    container_name: kibana
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
volumes:
  mysql_data:
  grafana_data:
  esdata:


